import { Question } from "survey-core";
import { VisualizerBase } from "./visualizerBase";
import "./nps.scss";
export declare class NpsVisualizerWidget {
    private _model;
    private _data;
    private _renderedTarget;
    constructor(_model: NpsVisualizer, _data: {
        detractors: number;
        passive: number;
        promoters: number;
        total: number;
    });
    private renderScorePart;
    render(target: HTMLDivElement): void;
    get npsScore(): number;
    get promotersPercent(): number;
    get passivePercent(): number;
    get detractorsPercent(): number;
    dispose(): void;
}
export declare class NpsAdapter {
    private model;
    private _npsVisualizer;
    constructor(model: NpsVisualizer);
    get npsVisualizer(): any;
    create(element: HTMLElement): Promise<any>;
    destroy(node: HTMLElement): void;
}
export declare class NpsVisualizer extends VisualizerBase {
    static DetractorScore: number;
    static PromoterScore: number;
    precision: number;
    private _npsAdapter;
    constructor(question: Question, data: Array<{
        [index: string]: any;
    }>, options?: Object, name?: string);
    protected getCalculatedValuesCore(): any;
    protected destroyContent(container: HTMLElement): void;
    protected renderContentAsync(container: HTMLElement): Promise<HTMLElement>;
    destroy(): void;
}
