export declare class ColorCalculator {
    colorSettings: Array<{
        colorAlpha: number;
        colorDelta: number;
    }>;
    isInitialized: boolean;
    initializeColorSettings(baseColor: string, dependent–°olorValues: Array<string>): void;
    calculateDependentColorValues(newBaseColor: string): Array<string>;
}
export declare class HueColorCalculator {
    colorHsb: Array<number>;
    colorAlpha: number;
    isInitialized: boolean;
    initialize(baseColor: string): void;
    calculateDependentColorValue(baseColor: string): string;
}
export declare function ingectAlpha(hexColor: any, alpha: number): any;
export declare function convertRgbaToString(rgbValues: Array<number>, alpha: number): string;
export declare function parseRgbaFromString(value?: string): Array<number>;
export declare function getRGBaChannelValues(color: string): Array<number>;
export declare function parseColor(value?: string): {
    color: string;
    opacity: number;
};
export declare function HEXToRGB(baseColor: any): any;
export declare function HSBToRGB(h: any, s: any, b: any): number[];
export declare function RGBToHSB(r: any, g: any, b: any): number[];
export declare function colorsAreEqual(color1: string, color2: string): boolean;
